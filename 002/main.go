/*
Each new term in the Fibonacci sequence is generated by adding the previous two
 terms. By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed
four million, find the sum of the even-valued terms.
*/

package main

import "fmt"

func generate_fibs(first, second, lessthan int) []int {
	fibs := make([]int, 2)
	fibs[0] = first
	fibs[1] = second

	sum := 0

	for i := 1; sum < lessthan; i++ {
		sum = fibs[i] + fibs[i-1]
		fibs = append(fibs, sum)
	}

	return fibs
}

func main() {
	sum := 0
	fibs := generate_fibs(1, 2, 4000000)
	for _, v := range fibs {
		if v%2 == 0 {
			sum = sum + v
		}
	}

	fmt.Println(sum)
}
